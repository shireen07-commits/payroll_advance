server:
  port: 8084

spring:
  application:
    name: notification-service
  
  datasource:
    url: jdbc:postgresql://localhost:5432/payroll_advance_notifications
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: notification-service-group
      auto-offset-reset: earliest
    producer:
      client-id: notification-service-producer
  
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  health:
    probes:
      enabled: true

# Application-specific settings
app:
  notification:
    # Email settings - used for simulating email sending without actual SMTP server
    email:
      enabled: true
      simulation-mode: true
      from-address: no-reply@payrolladvance.com
    
    # SMS settings - used for simulating SMS sending without actual SMS provider
    sms:
      enabled: true
      simulation-mode: true
    
    # WebSocket configuration for real-time notifications to UI
    websocket:
      enabled: true
      endpoint: /ws
      topic-prefix: /topic
      application-destination-prefix: /app
  
  # Kafka topics to listen to
  kafka:
    topics:
      notification-requested: notification-requested
      notification-delivered: notification-delivered
      user-created: user-created
      user-updated: user-updated
      advance-request-created: advance-request-created
      advance-request-approved: advance-request-approved
      advance-request-rejected: advance-request-rejected
      disbursement-initiated: disbursement-initiated
      disbursement-completed: disbursement-completed
      repayment-scheduled: repayment-scheduled
      repayment-completed: repayment-completed
  
  # Integration with existing Node.js application
  nodejs:
    api-url: http://localhost:3000/api
    auth-token: ${NODEJS_AUTH_TOKEN:defaultTokenForDevelopment}