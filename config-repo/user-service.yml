server:
  port: 8081

spring:
  application:
    name: user-service
  
  datasource:
    url: jdbc:postgresql://localhost:5432/payroll_advance_users
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: user-service-group
      auto-offset-reset: earliest
    producer:
      client-id: user-service-producer
  
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  health:
    probes:
      enabled: true

# Application-specific settings
app:
  jwt:
    secret: ${JWT_SECRET:veryLongAndSecureRandomSecretKeyForJwtSigningThatShouldBeSetInProduction}
    expiration: 86400000  # 24 hours in milliseconds
  
  kafka:
    user-topic: user-events
    notification-topic: notification-events
  
  # Integration with existing Node.js application
  nodejs:
    api-url: http://localhost:3000/api
    auth-token: ${NODEJS_AUTH_TOKEN:defaultTokenForDevelopment}